<ol class="ml-8">
  @each(comment in nodeComments)
  @set('childComments', comments.filter(c => c.replyTo === comment.id))
  @set('rootParentId', comment.replyTo ? rootParentId : comment.id)
  @set('replyTo', comment.id)
  @set('levelIndex', levelIndex ? levelIndex + 1 : 1)
  @set('isAnon', !comment.userId)
  @set('userLiked', comment.userVotes.find(v => v.meta.pivot_user_id === auth.user?.id))

  <li class="relative" id="comment{{ comment.id }}">
    <div class="bg-slate-100 dark:bg-slate-800 border border-slate-300 dark:border-slate-700 rounded-lg p-3 mb-6 group"
      :class="window.location.hash === `#comment{{ comment.id }}` ? 'border-brand-700' : 'border-slate-100'">
      <div class="mb-3 flex items-center">
        @if (isAnon)
          <div class="w-10 h-10 rounded-full mr-3 bg-slate-200 overflow-hidden relative">
            @!svg.user({ className: 'w-10 h-10 text-slate-600 absolute -bottom-1 left-0' })
          </div>
          <div class="flex flex-col">
            <h6 class="text-base font-semibold">
              Anonymous <span class="text-sm font-normal">({{ comment.name }})</span>
            </h6>
            <div class="text-slate-400 text-xs">
              Commented <span datetime="{{ comment.createdAt }}">{{ comment.timeago }}</span>
            </div>
          </div>
        @else
          <img src="{{ comment.user.avatar }}" class="w-10 h-10 rounded-xl mr-3" />
          <div class="flex flex-col">
            <h6 class="text-base font-semibold">
              {{ comment.user.username }}
            </h6>
            <div class="text-slate-400 text-xs">
              Commented <span datetime="{{ comment.createdAt }}">{{ comment.timeago }}</span>
            </div>
          </div>
        @endif
      </div>

      <div class="ml-10 pl-3">
        <div x-show="editId !== {{ comment.id }}" class="prose dark:text-slate-500 mb-3">{{{ comment.body }}}</div>

        @can('CommentPolicy.update', comment, identity)
          <div x-show="editId === {{ comment.id }}">
            @!next.comments.form({
              ...comment.serialize(),
              cancelable: true,
              onCancel: 'cancel()'
            })
          </div>
        @endcan

        <div x-show="editId !== {{ comment.id }}" class="flex items-center space-x-2 group">
          @if (auth.user)
            @next.form.post({ action: route('api.comments.like', { id: comment.id }), attrs: 'up-submit up-scroll="preserve"' })
              <button 
                type="submit" 
                class="btn-hover-fill text-slate-900 hover:text-slate-950 transition flex items-center text-sm bg-white dark:bg-opacity-20 border border-slate-100 dark:border-opacity-20 dark:text-slate-300 rounded-lg py-1 px-3 {{ userLiked && 'active' }}" 
                @click="$el.classList.toggle('active'); $el.querySelector('.btn-count').textContent = '⌁'">
                <div class="w-5 h-5 -mt-1 mr-2 relative">
                  @!svg.heartOutline({ className: 'btn-outline w-5 h-5 absolute top-0 left-0' })
                  @!svg.heart({ className: `btn-filled w-5 h-5 text-slate-800 absolute top-0 left-0` })
                </div>
                <span class="btn-count">{{ comment.userVotes.length }}</span>
              </button>
            @end
          @else
            <div class="btn-hover-fill text-slate-900 transition flex items-center text-sm bg-slate-50 dark:bg-opacity-20 border border-slate-200 dark:border-opacity-20 dark:text-slate-300 rounded-lg py-1 px-3">
              <div class="w-5 h-5 -mt-1 mr-2 relative text-slate-600 dark:text-slate-400">
                @!svg.heart({ className: `btn-filled w-5 h-5 absolute top-0 left-0 !opacity-100` })
              </div>
              <span class="btn-count">{{ comment.userVotes.length }}</span>
            </div>
          @endif

          @can('CommentPolicy.reply')
            <button type="button" @click="create( {{ comment.id }} )"
              class="text-slate-900 hover:text-slate-950 transition flex items-center text-sm bg-white border border-slate-100 dark:bg-opacity-20 dark:border-opacity-20 dark:text-slate-300 rounded-lg py-1 px-3 opacity-0 group-hover:opacity-100">
              @!svg.reply({ className: 'w-3 h-3 mr-1' })
              Reply
            </button> 
          @endcan

          @cannot('CommentPolicy.reply')
            <p class="opacity-0 group-hover:opacity-100 duration-150">
              Please
              <a href="{{ route('auth.signin.show') }}" up-layer="new modal" class="anchor link-alt">
                sign in
              </a>
              or 
              <a href="{{ route('auth.signup.show') }}" up-layer="new modal" class="anchor link-alt">
                sign up for free
              </a>
              to reply
            </p>
          @endcannot

          @can('CommentPolicy.update', comment, identity)
            <button type="button" @click="edit( {{ comment.id }} )"
              class="text-blue-800 hover:text-blue-900 transition flex items-center text-sm bg-white border border-slate-100 dark:bg-opacity-20 dark:border-opacity-20 dark:text-slate-300 rounded-lg py-1 px-3 opacity-0 group-hover:opacity-100">
              @!svg.edit({ className: 'w-3 h-3 mr-1' })
              Edit
            </button>
          @endcan

          @can('CommentPolicy.delete', comment, identity)
            @next.form.delete({ action: route('comments.destroy', { id: comment.id }), attrs: 'up-submit up-scroll="preserve" up-confirm="Your comment will be deleted, would you like to continue?"' })
              <button type="submit"
                class="text-red-800 hover:text-red-900 transition flex items-center text-sm bg-white border border-slate-100 dark:bg-opacity-20 dark:border-opacity-20 dark:text-slate-300 rounded-lg py-1 px-3 opacity-0 group-hover:opacity-100">
                @!svg.delete({ className: 'w-3 h-3 mr-1' })
                Delete
              </button>
            @end
          @endcan
        </div>
      </div>
    </div>

    @can('CommentPolicy.reply', comment, identity)
      {{-- reply to form --}}
      <div x-show="createId === {{ comment.id }}" class="bg-slate-50 dark:bg-slate-950 border border-slate-100 dark:border-slate-900 p-3 rounded-xl ml-8 mb-3">
        @!next.comments.form({
          postId,
          rootParentId,
          replyTo,
          levelIndex,
          cancelable: true,
          onCancel: 'cancel()'
        })
      </div>
    @endcan

    @if (childComments.length)
      @!next.comments.list({
        postId,
        rootParentId,
        comments,
        levelIndex,
        nodeComments: childComments,
      })
    @endif
  </li>
  @endeach
</ol>
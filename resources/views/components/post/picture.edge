@let(lazy = $props.lazy ?? false)

@if (item.thumbnails?.length || item.covers?.length)
  @let(img = item.thumbnails?.length ? item.thumbnails[0] : item.covers[0])
  @picture({
    ...$props,
    ratio: 'aspect-video',
    fit: 'object-cover',
    class: [`rounded-md overflow-hidden group-hover:shadow-xl duration-300`, ...($props.class || [])],
    filename: img.filename,
    altText: img.altText,
    lazy
  })
    @cannot('PostPolicy.view', item)
      <div class="absolute bottom-2 left-2 text-slate-base-50 flex items-center w-full">
        <div class="w-5 h-5 bg-slate-base-50 rounded-md text-slate-base-700 flex items-center justify-center">
          @if (item.paywallTypeId === PaywallTypes.DELAYED_RELEASE)
            @svg('ph:clock-countdown-fill', { class: 'w-3 h-3' })
          @else
            @svg('ph:lock-key-fill', { class: 'w-3 h-3' })
          @endif
        </div>
        @if (item.paywallTypeId === PaywallTypes.DELAYED_RELEASE)
          <div class="text-2xs ml-1 uppercase font-bold bg-slate-base-900/50 px-1 py-0.5 rounded-md backdrop-blur-lg">
            {{ item.paywallTimeAgo }} 
          </div>
        @endif
      </div>
    @elseif (item.progressionHistory?.length)
      @let(progress = item.progressionHistory.at(0))
      @let(progressPercent = progress.watchPercent > progress.readPercent ? progress.watchPercent : progress.readPercent)
      
      @if (progress.isCompleted)
        @assign(progressPercent = 100)
      @endif
      
      @if (progressPercent !== null && progressPercent > 0)
        @let(bg = progressPercent < 100 ? 'bg-slate-base-50' : 'bg-green-600')
        @let(text = progressPercent < 100 ? 'text-slate-base-50' : 'text-green-600')
        @let(size = 6)
        @let(sizeClass = 'w-6 h-6')

        <div class="absolute bottom-1 left-1 drop-shadow flex items-center gap-0.5 bg-slate-base-900/80 backdrop-blur-md pr-2 py-0.5 rounded-md">
          <div x-data="progressRing({{ progressPercent }}, {{ size }})" class="flex flex-col justify-center items-center select-none">
            <svg class="relative flex items-center justify-center transform -rotate-90 {{ sizeClass }}">
              <circle class="text-slate-base-600" stroke="currentColor" stroke-width="3" cx="50%" cy="50%" r="{{ size }}" fill="transparent" />
              <circle cx="50%" cy="50%" r="{{ size }}" stroke="currentColor" stroke-linecap="round" stroke-width="3" fill="transparent" :stroke-dasharray="circumference" :stroke-dashoffset="'-'+circumference - percentage / 100 * circumference" class="text-green-600 transition-all duration-300" />
            </svg>
          </div>
          <div class="font-mono inline-block rounded-full leading-none text-2xs {{ text }}">
            {{ progressPercent }}%
          </div>
        </div>
      @endif
    @endcannot
  @end
@endif
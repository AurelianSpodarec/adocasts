@let(square = $props.square ?? false)
@let(size = $props.size || 'base')
@let(sizes = {
  xs: `${square ? 'p-0.5' : 'px-2 py-0.5'} text-xs`,
  sm: `${square ? 'p-1' : 'px-2.5 py-1'} text-xs`,
  base: `${square ? 'p-1.5' : 'px-3 py-1.5'} text-sm`,
  lg: `${square ? 'p-2' : 'px-4 py-2'} text-base`,
})

@let(variant = $props.variant || 'theme')
@let(variants = $props.variants || {
  theme: 'inline-flex items-center justify-center font-medium tracking-wide text-slate-600 transition-colors rounded-md border-2 border-slate-200 hover:border-slate-300 bg-slate-200 hover:bg-slate-300 hover:text-slate-900 focus:ring-2 focus:ring-offset-2 focus:ring-slate-200 focus:shadow-outline focus:outline-none transition-all',
  light: 'inline-flex items-center justify-center font-medium tracking-wide transition-colors border-2 border-slate-100 hover:border-slate-50 bg-slate-100 hover:bg-slate-50 rounded-md text-slate-900 hover:text-slate-700 active:bg-slate-50 focus:bg-slate-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-slate-200/60 duration-300 focus:shadow-outline transition-all shadow-none hover:shadow-glow',
  lightBase: 'inline-flex items-center justify-center font-medium tracking-wide transition-colors border-2 border-slate-base-100 hover:border-slate-base-50 bg-slate-base-100 hover:bg-slate-base-50 rounded-md text-slate-base-900 hover:text-slate-base-700 active:bg-slate-base-50 focus:bg-slate-base-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-slate-base-200/60 duration-300 focus:shadow-outline transition-all shadow-none hover:shadow-glow',
  dark: 'inline-flex items-center justify-center font-medium tracking-wide text-slate-50 transition-colors rounded-md border-2 border-slate-950 hover:border-slate-700 bg-slate-950 hover:bg-slate-700 focus:ring-2 focus:ring-offset-2 focus:ring-slate-900 focus:shadow-outline focus:outline-none transition-all shadow-none hover:shadow-glow',
  darkBase: 'inline-flex items-center justify-center font-medium tracking-wide text-slate-base-50 transition-colors rounded-md border-2 border-slate-base-950 hover:border-slate-base-700 bg-slate-base-950 hover:bg-slate-base-700 focus:ring-2 focus:ring-offset-2 focus:ring-slate-base-900 focus:shadow-outline focus:outline-none transition-all shadow-none hover:shadow-glow',
  blue: 'inline-flex items-center justify-center font-medium tracking-wide text-blue-500 transition-colors border-2 border-slate-200 hover:border-blue-200 bg-slate-200 rounded-md hover:bg-blue-200 hover:text-blue-700 focus:ring-2 focus:ring-offset-2 focus:ring-blue-700 focus:shadow-outline focus:outline-none',
  red: 'inline-flex items-center justify-center font-medium tracking-wide text-red-500 transition-colors border-2 border-slate-200 hover:border-red-200 bg-slate-200 rounded-md hover:bg-red-200 hover:text-red-700 focus:ring-2 focus:ring-offset-2 focus:ring-red-700 focus:shadow-outline focus:outline-none',
  green: 'inline-flex items-center justify-center font-medium tracking-wide text-green-500 transition-colors border-2 border-slate-200 hover:border-green-200 bg-slate-200 hover:bg-green-200 hover:text-green-700 rounded-md focus:ring-2 focus:ring-offset-2 focus:ring-green-700 focus:shadow-outline focus:outline-none',
  yellow: 'inline-flex items-center justify-center font-medium tracking-wide text-yellow-500 transition-colors border-2 border-slate-200 hover:border-yellow-200 bg-slate-200 hover:bg-yellow-200 hover:text-yellow-800 rounded-md hover:bg-yellow-600 focus:ring-2 focus:ring-offset-2 focus:ring-yellow-600 focus:shadow-outline focus:outline-none',
})

@let(sendingKey = $props.sendingKey || 'sending')

@if (href)
  @let(follow = $props.follow ?? true)
  <a
    {{ $props.except(['type', 'class', 'size', 'variant', 'variants', 'block']).toAttrs() }}
    {{ html.attrs({ 'up-follow': follow }) }}
    x-data
    type="{{ type || 'button' }}" 
    class="{{ html.classNames('duration-300', utils.classes(sizes[size], variants[variant], $props.class, [{ 'flex w-full': block, 'opacity-40': disabled }])) }}">
    <span class="flex items-center gap-1.5">
      {{{ await $slots.main() }}}
    </span>
  </a>
@else
  <button 
    {{ $props.except(['type', 'class', 'size', 'variant', 'variants', 'block']).toAttrs() }}
    x-data
    type="{{ type || 'button' }}" 
    class="{{ html.classNames('duration-300', utils.classes(sizes[size], variants[variant], $props.class, [{ 'flex w-full': block, 'opacity-40 cursor-not-allowed': disabled }])) }}">
    @if ($slots.loading)
      <span x-show="{{ sendingKey }}" class="flex items-center gap-1.5">
        {{{ await $slots.loading() }}}
      </span>
    @endif
    <span {{ html.attrs({ 'x-show': $slots.loading && `!${sendingKey}` })}} class="flex items-center gap-1.5">
      {{{ await $slots.main() }}}
    </span>
  </button>
@endif
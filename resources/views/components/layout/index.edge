@let(isPostOnDeck = !!post && (!!series || !!path || similarLessons?.length) && post.postTypeId !== PostTypes.NEWS)
@let(postClassString = 'w-[calc(100%-var(--lesson-list-width))]')
@let(postClass = html.classNames([{ [postClassString] : isPostOnDeck }]))
@let(theme = auth.user?.theme || session.get('theme'))

<!DOCTYPE html>
<html lang="en" class="{{ theme ?? 'system' }}">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title> AdonisJS - A fully featured web framework for Node.js </title>

  @vite(['resources/js/app.js'])
</head>
<body x-data class="h-full bg-body text-slate-900 overflow-x-hidden subpixel-antialiased" layout-root up-theme>
  <div id="context" x-data="{ state: {} }" @mounted="state = { ...state, [$event.detail.name]: $event.detail.data }" @call="state[$event.detail.namespace][$event.detail.name]($event.detail.args)"></div>

  @!toast()
  
  <div id="banners" up-hungry>
    @!banner.verifyEmail()
  </div>

  <div class="relative z-[101] {{ postClass }}" up-header>
    @!layout.header()
  </div>

  <div id="upHero" class="relative z-20 {{ postClass }}" up-hungry up-hero>
    @if ($slots.hero)
      {{{ await $slots.hero() }}}
    @endif
  </div>
  
  <main class="{{ postClass }}" data-post-class="{{ postClassString }}" data-sync-to="[up-header], [up-hero], [up-footer]" up-main>
    <div {{ html.attrs({ class: utils.classes('page relative z-20', [up.isPage ? 'mt-8' : '!px-0']), ...($props.attrs || {}) }) }}>
      {{{ await $slots.main() }}}
    </div>

    @!toast.flash()
  </main>

  <div class="{{ postClass }}" up-footer>
    @!layout.footer()
  </div>

  <div id="upList" up-hungry up-list>
    @if (isPostOnDeck && $slots.list)
      {{{ await $slots.list() }}}
    @endif
  </div>

  <div up-player>
    @!post.player()
  </div>

  <div id="portal"></div>

  @if (!up.isUnpolyRequest)
    <script src="https://unpkg.com/@lottiefiles/lottie-player@latest/dist/lottie-player.js"></script>
  @endif
</body>
</html>

@let(isPostOnDeck = !!post && (!!series || !!path || similarLessons?.length) && post.postTypeId !== PostTypes.NEWS)
@let(postClass = html.classNames([{ 'w-[calc(100%-var(--lesson-list-width))]': isPostOnDeck }]))

<!DOCTYPE html>
<html class="system">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title> AdonisJS - A fully featured web framework for Node.js </title>

  @vite(['resources/js/app.js'])
</head>
<body class="h-full bg-body text-slate-900 overflow-x-hidden subpixel-antialiased" layout-root up-theme>
  <div id="context" x-data="{ state: {} }" @mounted="state = { ...state, [$event.detail.name]: $event.detail.data }" @call="state[$event.detail.namespace][$event.detail.name]($event.detail.args)"></div>
  
  <div class="{{ postClass }}" up-header>
    @!layout.header()
  </div>

  <div x-data="{ heroVisible: true, heroHeight: 0 }" class="{{ postClass }}" up-main>
    @if ($slots.hero)
      {{{ await $slots.hero() }}}
    @endif

    <main {{ html.attrs({ class: utils.classes('page', [up.isPage ? 'mt-8' : '!px-0']), ...($props.attrs || {}) }) }} >
      {{{ await $slots.main() }}}
    </main>

    @if (isPostOnDeck && $slots.list)
      {{{ await $slots.list() }}}
    @endif
  </div>

  <div class="{{ postClass }}" up-footer>
    @!layout.footer()
  </div>

  <div id="portal"></div>
</body>
</html>

@import 'tailwindcss';
@import "tailwindcss-animated";
@plugin "@tailwindcss/typography";

@theme {
  --font-sans: 'Red Hat Display', sans-serif;
  --font-mono: 'Red Hat Mono', monospace;
  /* --color-base-title: oklch(93.53% 0.0592 304.85); */
}

@plugin "daisyui" {
  /* themes: 'dark'; */
}

/* @plugin "daisyui/theme" {
  name: 'night';
  default: false;
  prefersdark: true;
  color-scheme: 'dark';
  --color-base-100: oklch(0.28 0.0863 287.23);
  --color-base-200: oklch(0.24 0.0617 287.23);
  --color-base-300: oklch(18.5% 0.055 287.23);
  --color-base-content: oklch(85.29% 0.0395 288.43);
  --color-primary: oklch(0.57 0.17765687088086557 276.9970363642235);
  --color-primary-content: oklch(0.9 0.04819531886405981 275.7116935996338);
  --color-secondary: oklch(82% 0.111 230.318);
  --color-secondary-content: oklch(13.602% 0.031 276.934);
  --color-accent: oklch(91% 0.096 180.426);
  --color-accent-content: oklch(14.472% 0.035 350.048);
  --color-neutral: oklch(25% 0.09 281.288);
  --color-neutral-content: oklch(87% 0.065 274.039);
  --color-info: oklch(68.455% 0.148 237.251);
  --color-info-content: oklch(0% 0 0);
  --color-success: oklch(78.452% 0.132 181.911);
  --color-success-content: oklch(15.69% 0.026 181.911);
  --color-warning: oklch(83.242% 0.139 82.95);
  --color-warning-content: oklch(16.648% 0.027 82.95);
  --color-error: oklch(71.785% 0.17 13.118);
  --color-error-content: oklch(14.357% 0.034 13.118);
  --radius-selector: .25rem;
  --radius-field: 0.5rem;
  --radius-box: 1rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 0;
  --noise: 0;
} */

@plugin "daisyui/theme" {
  name: 'night';
  default: false;
  prefersdark: true;
  color-scheme: 'dark';
  
  /* Base Colors */
  --color-base-100: oklch(0.26 0.068 287.4); /* Slightly muted base */
  --color-base-200: oklch(0.23 0.056 287.5); /* More neutral base */
  --color-base-300: oklch(16.8% 0.055 287.6); /* Soft dark for secondary areas */
  --color-base-content: oklch(83% 0.039 288.4); /* Soft white text on base */
  
  /* Primary Colors */
  --color-primary: oklch(0.55 0.150 276.5); /* Slightly softer primary for readability */
  --color-primary-content: oklch(0.93 0.048 275.7); /* Light text on primary */
  
  /* Secondary Colors */
  --color-secondary: oklch(80% 0.10 230.5); /* A bit softer secondary */
  --color-secondary-content: oklch(12% 0.03 276.9); /* Dark secondary content */
  
  /* Accent Colors */
  --color-accent: oklch(90% 0.08 180.6); /* Softer accent for subtle contrast */
  --color-accent-content: oklch(13% 0.033 350.1); /* Darker accent content for contrast */
  
  /* Neutral Colors */
  --color-neutral: oklch(0.26 0.068 287.4); /* Lighter neutral, just above base-100 */
  --color-neutral-content: oklch(86% 0.05 287.6);
  
  /* Status Colors */
  --color-info: oklch(68% 0.15 237.2); /* Slightly more vibrant info */
  --color-info-content: oklch(0% 0 0); /* Solid white for info content */
  
  --color-success: oklch(77% 0.13 182); /* Softer success for readability */
  --color-success-content: oklch(15.5% 0.025 182); /* Darker content on success */
  
  --color-warning: oklch(82% 0.13 83); /* Mellowed out warning */
  --color-warning-content: oklch(15.5% 0.02 83); /* Slightly darker warning content */
  
  --color-error: oklch(70% 0.17 13.2); /* Slightly less saturated error */
  --color-error-content: oklch(13% 0.03 13.1); /* Darker error content */
  
  /* Custom Radius and Border */
  --radius-selector: .25rem;
  --radius-field: 0.5rem;
  --radius-box: 1rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 0;
  --noise: 0;
}

@utility text-2xs {
  font-size: 0.625rem;
}

@utility mask-gradient-to-r {
  mask: linear-gradient(to right, black 55%, transparent);
}

@utility mask-gradient-to-l {
  mask: linear-gradient(to left, transparent, black);
}

@utility mask-gradient-to-t {
  mask: linear-gradient(to top, black 55%, transparent);
}

@utility mask-gradient-to-b {
  mask: linear-gradient(to top, transparent, black);
}

@utility mask-gradient-to-bl {
  mask: 
    linear-gradient(to top, transparent, black 50%),
    linear-gradient(to right, transparent, black 50%);
  mask-composite: intersect;
}

[x-cloak] {
  display: none !important;
}

html,
body {
  background-color: var(--color-base-300);
}

body {
  --section-spacing: theme('spacing.12')

  --mono: 0;
  --casl: 0.5;
  --wght: 400;
  --slnt: 0;
  --crsv: 0.5;
  font-variation-settings: var(--mono), var(--casl), var(--wght), var(--slnt), var(--crsv);
  overflow-x: hidden;

  .italic {
    --casl: 1;
    --slnt: -15;
  }

  .mono {
    --mono: 1;
  }

  .font-semibold {
    --wght: 600;
  }

  .font-bold {
    --wght: 700;
  }

  .font-black {
    --wght: 800;
  }
}

.heading-2 {
  @apply z-10 relative mb-6 font-semibold text-4xl max-lg:text-center text-balance tracking-tight;

  @variant lg {
    @apply text-5xl;
  }
}

.heading-2a {
  @apply z-10 relative mb-6 font-semibold text-2xl max-lg:text-center text-balance tracking-tight;

  @variant lg {
    @apply text-3xl;
  }
}

.heading-3 {
  @apply mb-3 font-semibold text-xl;

  @variant lg {
    @apply text-2xl;
  }
}

.heading-4 {
  @apply mb-3 font-medium text-lg;

  @variant lg {
    @apply text-xl;
  }
}

.radial-progress {
  &:before {
    background: radial-gradient(farthest-side, currentColor 98%, #0000) top/var(--thickness) var(--thickness) no-repeat, conic-gradient(currentColor var(--radialprogress), var(--color-base-100, #0000) 0);
  }
}

.collapse {
  .show-open {
    display: none;
  }

  .show-close {
    display: initial;
  }
}

.collapse[open] {
  .show-open {
    display: initial;
  }

  .show-close {
    display: none;
  }

  .open\:rotate-180 {
    transform: rotate(180deg);
  }
}

.card-title {
  --cardtitle-fs: 1.125rem;
}

a.link-grow {
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 50;
  }
}

.container,
.section-container,
.container-vars {
  --max-width: 100%;
  --radius: theme(borderRadius.lg);
  --padding-x: theme(spacing.6);
  --container-width: calc(var(--max-width) - (var(--padding-x) * 2));

  @variant lg {
    --radius: theme(borderRadius.xl);
    --padding-x: theme(spacing.12);
  }

  @variant xl {
    --padding-x: theme(spacing.16);
  }

  @variant 2xl {
    --max-width: 96rem;
  }

  @media screen and (width >=1346px) {
    --container-width: calc(100% - (var(--padding-x) * 2));
  }

  @media screen and (width >= 1454px) {
    --container-width: min(100%, var(--max-width));
  }
}

.container-vars,
.section-container,
.section-y,
.section-b {
  --padding-y: theme(spacing.9);

  @variant lg {
    --padding-y: theme(spacing.12);
  }
}

.container,
.section-container {
  width: 100%;
  padding-right: var(--padding-x);
  padding-left: var(--padding-x);

  @variant sm {
    max-width: calc(var(--max-width) + (var(--padding-x) * 2));
  }
}

.section-container,
.section-y {
  padding-top: var(--padding-y);
  padding-bottom: var(--padding-y);
}

.section-m-y {
  margin-top: var(--padding-y);
  margin-bottom: var(--padding-y);
}

.section-b {
  padding-bottom: var(--padding-y);
}

.border-base {
  border-color: var(--color-base-300);
  border-width: var(--border);
}

.carousel-item-viewport-offset {
  width: calc(((100% - var(--container-width)) / 2) + var(--padding-x));
}

.btn.btn-ghost-soft {
  &:not(.btn-active, .mouseover, :hover, :active:focus, :focus-visible) {
    &:not(:disabled, [disabled], .btn-disabled) {
      outline-color: currentColor;
      --btn-fg: currentColor;
    }
  }

  &:not(.btn-active, .mouseover, :hover, :active:focus, :focus-visible) {
    --btn-shadow: '';
    --btn-bg: #0000;
    --btn-border: #0000;
    --btn-noise: none;
  }

  &:hover,
  &.mouseover {
    --btn-shadow: '';
    --btn-fg: var(--btn-color, var(--color-base-content));
    --btn-bg: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-content)) 8%,
      var(--color-base-100)
    );
    --btn-border: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-content)) 10%,
      var(--color-base-100)
    );
    --btn-noise: none;
  }
}

.starfield-origin {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.faded-pattern-br {
  --end: var(--tw-gradient-to);
  
  &:before,
  &:after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(to var(--dir, right), transparent 75%, var(--end, transparent));
    z-index: 1;
  }

  &:after {
    --dir: bottom;
  }
}

.faded-pattern-bl {
  --end: var(--tw-gradient-to);

  &:before,
  &:after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(to var(--dir, left), transparent 75%, var(--end, transparent));
    z-index: 1;
  }

  &:after {
    --dir: bottom;
  }
}

.faded-pattern-x {
  --end: var(--tw-gradient-to);

  &:before,
  &:after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(to var(--dir, left), transparent 75%, var(--end, transparent));
    z-index: 1;
  }

  &:after {
    --dir: right;
  }
}

.faded-pattern {
  --end: var(--tw-gradient-to);

  &:before,
  &:after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(to var(--dir, right), var(--end, transparent), transparent 25%, transparent 75%, var(--end, transparent));
    z-index: 1;
  }

  &:after {
    --dir: bottom;
  }
}

.faded-scroll-y {
  --end: var(--tw-gradient-to);

  height: 100%;
  display: flex;
  flex-direction: column;
  container-type: size;
  position: relative;

  &:before,
  &:after {
    content: '';
    width: 100%;
    height: 3rem;
    pointer-events: none;
    position: absolute;
    left: 0;
    z-index: 10;
    transition: all 300ms ease-in-out;
  }

  &:before {
    background: linear-gradient(to top, transparent 25%, var(--end, transparent));
    opacity: var(--opacity-top, 1);
    top: 0;
  }

  &:after {
    background: linear-gradient(to bottom, transparent 25%, var(--end, transparent));
    opacity: var(--opacity-bottom, 1);
    bottom: 0;
  }

  ul {
    flex: 1;
    overflow-y: auto;
    max-height: 100cqh;
  }
}

.faded-scroll-carousel {
  --end: var(--tw-gradient-to);

  position: relative;

  &:before,
  &:after {
    content: '';
    width: 3rem;
    height: 100%;
    pointer-events: none;
    position: absolute;
    top: 0;
    z-index: 10;
    transition: all 300ms ease-in-out;
  }

  &:before {
    background: linear-gradient(to left, transparent 25%, var(--end, transparent));
    opacity: var(--opacity-left, 1);
    left: 0;
  }

  &:after {
    background: linear-gradient(to right, transparent 25%, var(--end, transparent));
    opacity: var(--opacity-right, 1);
    right: 0;
  }
}

@property --hero-card-border-angle {
  syntax: '<angle>';
  initial-value: 0deg;
  inherits: false;
}

@keyframes hero-card-border-spin {
  from {
    --hero-card-border-angle: 0deg;
  }

  to {
    --hero-card-border-angle: 360deg;
  }
}

.hero-card-border {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;

  &:before,
  &:after {
    content: '';
    width: 100%;
    height: 100%;
    background-image: conic-gradient(
      from var(--hero-card-border-angle),
      color-mix(in oklab, var(--color-primary) 0%, transparent),
      color-mix(in oklab, var(--color-primary) 0%, transparent),
      color-mix(in oklab, var(--color-primary) 0%, transparent),
      var(--color-primary),
      var(--color-secondary),
      var(--color-accent),
      var(--color-accent),
      var(--color-secondary),
      var(--color-primary),
      color-mix(in oklab, var(--color-primary) 0%, transparent),
      color-mix(in oklab, var(--color-primary) 0%, transparent),
      color-mix(in oklab, var(--color-primary) 0%, transparent)
    );
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    /* animation: 6s hero-card-border-spin linear infinite; */
  }

  &.rounded-b-4xl:before,
  &.rounded-b-4xl:after {
    @apply rounded-b-4xl;
  }

  &:before {
    filter: blur(1.5rem);
    opacity: 0.5;
  }
}

@keyframes line-grid {
  0% {
    transform: translateY(0, 0, 0);
  }

  100% {
    transform: translate3d(0, -50%, 0);
  }
}

.stats.stats-lg {
  column-gap: theme(spacing.6);
  row-gap: theme(spacing.1.5);

  .stat {
    --border: 0px;
    padding-inline: calc(0.25rem * 1.5);
  }

  .stat-title {
    font-size: var(--text-base);
    display: none;
  }

  .stat-value {
    font-size: var(--text-3xl);
  }

  :not(.stat-value-group) > .stat-figure svg {
    display: none;
  }

  .stat-value-group > .stat-figure svg {
    width: theme(spacing.6);
    height: theme(spacing.6);
  }

  @variant md {
    gap: theme(spacing.3);

    .stat {
      --border: 1px;
      padding-inline: calc(0.25rem * 1.5);
    }

    .stat-title {
      font-size: var(--text-sm);
      display: initial;
    }

    .stat-value {
      font-size: var(--text-3xl);
    }
  }

  @variant lg {
    gap: theme(spacing.3);

    .stat {
      padding-inline: calc(0.25rem * 3);
    }

    :not(.stat-value-group) > .stat-figure svg {
      display: initial;
      width: theme(spacing.12);
      height: theme(spacing.12);
    }

    .stat-title {
      font-size: var(--text-base);
    }

    .stat-value {
      font-size: var(--text-4xl);
    }
  }
  @variant xl {
    gap: theme(spacing.8);

    .stat {
      padding-inline: calc(0.25rem * 8);
    }

    .stat-figure svg {
      width: theme(spacing.16);
      height: theme(spacing.16);
    }

    .stat-title {
      font-size: var(--text-lg);
    }

    .stat-value {
      font-size: var(--text-5xl);
    }
  }
}

.skew-lines {
  width: 100%;
  height: 95%;
  perspective: 30vh;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;

  .skew-lines-floor {
    width: 125%;
    height: 150%;
    overflow: hidden;
    position: absolute;
    left: 50%;
    bottom: -4rem;
    transform: translateX(-50%);
    perspective: 450px;
  }

  .skew-lines-grid {
    width: 100%;
    height: 200%;
    transform: rotateX(106deg);
    opacity: 0.065;
    overflow: hidden;

    &:before {
      content: '';
      width: 100%;
      height: 200%;
      background-image:
        linear-gradient(to right, #fff 1px, transparent 0),
        linear-gradient(to bottom, #fff 1px, transparent 0);
      background-size: 120px 60px;
      background-repeat: repeat;
      animation: line-grid 45s linear infinite;
      position: absolute;
      left: 0;
    }
  }
}

.radial-accent-tl,
.radial-accent-t,
.radial-accent-tr {
  --opacity: 1;
  --offset-x-half: calc(var(--offset-x) / 2);
}

.hover\:radial-accent-tl,
.hover\:radial-accent-t,
.hover\:radial-accent-tr {
  --opacity: 0;

  &:hover {
    --opacity: 1;
  }
}

.group {
  .group-hover\:radial-accent-tl,
  .group-hover\:radial-accent-t,
  .group-hover\:radial-accent-tr {
    --opacity: 0;
  }

  .group:hover .group-hover\:radial-accent-tl,
  .group:hover .group-hover\:radial-accent-t,
  .group:hover .group-hover\:radial-accent-tr {
    --opacity: 1;
  }
}

.radial-accent-tl,
.hover\:radial-accent-tl,
.group-hover\:radial-accent-tl {
  --offset-x: 30%;
}

.radial-accent-t,
.hover\:radial-accent-t,
.group-hover\:radial-accent-t {
  --offset-x: 50%;

  &:after {
    right: unset;
    left: var(--offset-x);
    transform: translateX(-50%);
  }
}

.radial-accent-tr,
.hover\:radial-accent-tr,
.group-hover\:radial-accent-tr {
  --offset-x: 70%;
}

.radial-accent-tl,
.hover\:radial-accent-tl,
.group-hover\:radial-accent-tl,
.radial-accent-t,
.hover\:radial-accent-t,
.group-hover\:radial-accent-t,
.radial-accent-tr,
.hover\:radial-accent-tr,
.group-hover\:radial-accent-tr {
  --accent-height: 1px;

  position: relative;
  overflow: hidden;

  &:before {
    @apply top-0 left-0 z-20 absolute aspect-square pointer-events-none;

    content: "";
    width: 100%;
    opacity: var(--opacity, 1);
    transition: all 200ms ease-in-out;
    background-image: radial-gradient(
      40% 30px at var(--offset-x, 30%) 0%,
      color-mix(in oklab, var(--color-primary) var(--offset-x-half, 15%), transparent),
      color-mix(in oklab, var(--color-primary) 0%, transparent)
    );
  }

  &:after {
    @apply bg-gradient-to-r from-primary/0 from-[var(--offset-x-half,30%)] via-primary/30 to-primary/0;

    content: "";
    width: 80%;
    height: var(--accent-height, 1px);
    opacity: var(--opacity, 1);
    transition: all 200ms ease-in-out;
    position: absolute;
    top: 0;
    right: var(--offset-x, 30%);
    z-index: 10;
  }
}

.linear-accent {
  --height: 8px;

  position: relative;

  &:before,
  &:after {
    @apply left-0 z-20 absolute pointer-events-none;

    content: "";
    width: 100%;
    height: var(--height);
    border-top-right-radius: var(--radius-box);
    border-top-left-radius: var(--radius-box);
    background-image: linear-gradient(
      to var(--direction),
      color-mix(in oklab, var(--color) 3%, transparent) 0%,
      color-mix(in oklab, var(--color) 0%, transparent) 75%
    );
  }

  &:before {
    --direction: bottom;
    --color: var(--color-slate-50);
    border-bottom-right-radius: calc(var(--height) / 2);
    border-bottom-left-radius: calc(var(--height) / 2);
    top: 0;
  }

  &:after {
    --direction: top;
    --color: var(--color-slate-950);
    border-top-right-radius: calc(var(--height) / 2);
    border-top-left-radius: calc(var(--height) / 2);
    bottom: 0;
  }
}

.card:has(.card-border) {
  --accent-height: 3px;

  .card-body,
  .card-figure,
  .card-actions {
    position: relative;
    z-index: 6;
  }

  .card-border {
    @apply absolute inset-0 h-full overflow-hidden duration-200 ease-in-out;
    pointer-events: none;
    border-radius: var(--radius-box);
    border: 3px solid transparent;
    background: linear-gradient(to bottom, transparent, var(--color-base-100)) border-box;
    mask:
      linear-gradient(#000 0 0) padding-box, 
      linear-gradient(#000 0 0);
    mask-composite: exclude;
    opacity: 0;
    z-index: 20;
  }

  &:hover .card-border {
    opacity: 1;
  }
}

.series-bento {
  --gap: theme(spacing.3);

  display: grid;
  grid-auto-columns: 100%;
  grid-template-rows: repeat(1, 1fr);
  grid-template-areas:
    "area-1"
    "area-2";
  gap: var(--gap);

  @variant lg {
    grid-auto-columns: calc(33.33% - (var(--gap) / 2));
    grid-template-areas: "area-1 area-2 area-2";
  }

  .area-1 {
    grid-area: area-1;
    height: 100%;

    .card {
      display: grid;
      height: 100%;

      .card-body {
        flex-direction: row;
        gap: theme(spacing.6);

        main,
        aside {
          flex: 1;
        }

        @variant lg {
          flex-direction: column;
        }
      }

      aside {
        @variant md {
          @apply flex flex-col;
        }
      }
    }
  }

  .area-2 {
    grid-area: area-2;
    display: flex;
    flex-wrap: wrap;
    gap: var(--gap);

    .card {
      --width: 100%;
      width: calc(var(--width) - (var(--gap) / 2));

      @variant md {
        --width: 45%;
      }

      main {
        display: flex;
        flex-direction: column;
        height: 100%;
        justify-content: space-between;
      }
    }

    .card:nth-child(1),
    .card:nth-child(4) {
      @variant md {
        --width: 55%;
      }
    }
  }

  .card {
    main {
      p {
        @apply line-clamp-5;
      }
    }

    aside {
      @apply hidden;
    }
  }
}

.series-list {
  display: flex;
  flex-direction: column;

  .card {
    @variant lg {
      --tw-gradient-position: to right in oklab;
    }
  }

  .card-body {
    @variant lg {
      flex-direction: row;
      gap: theme(spacing.12);

      main {
        width: 60%;
        min-height: 14rem;

        .card-title {
          font-size: theme(fontSize.2xl);
        }

        p {
          font-size: theme(fontSize.base);
        }
      }

      aside {
        width: 40%;

        ul {
          max-height: calc(100cqh - 1rem);
        }
      }
    }
  }
}

.pattern-faded-stars {
  width: 100%;
  height: calc(theme(spacing.48) * 2);
  transform: translateY(-50%);
  position: absolute;
  top: 0;
  left: 0;

  &:before {
    content: "";
    background-image: url('/imgs/patterns/faded_stars.svg');
    background-repeat: repeat-x;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: .1;
    z-index: 0;
  }

  &:after {
    content: "";
    width: 100%;
    height: 100%;
    background-image: linear-gradient(
      to right,
      color-mix(in oklab, var(--color-base-300) 100%, transparent),
      color-mix(in oklab, var(--color-base-300) 0%, transparent) 20% 80%,
      color-mix(in oklab, var(--color-base-300) 100%, transparent)
    );
    position: absolute;
    top: 0;
    left: 0;
    z-index: 1;
  }
}

.scale-in {
  animation: scale-in 2.5s forwards;
  opacity: 0;
}

@keyframes scale-in {
  0% {
    transform: scale(2.5);
    opacity: .75;
  }

  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@layer utilities {
  .animate-jump-in-fade {
    animation-name: jump-in-fade;
    animation-duration: var(--default-animation-duration, 1s);
    animation-fill-mode: forwards;
    opacity: 0;
    transform: scale(0);
  }
}

@keyframes jump-in-fade {
  0% {
    transform: scale(0);
    opacity: 0;
  }
  40% {
    opacity: 1;
  }
  80% {
    transform: scale(1.2);
    opacity: 1;
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

@utility animate-marquee {
  animation-name: marquee;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
}

@keyframes marquee {
  0% {
    transform: translateX(0)
  }
  100% {
    transform: translateX(-100%)
  }
}



.prose p.timestamp {
  @apply font-bold text-slate-600 text-xs tracking-wide;
  margin-bottom: -2em;
  position: relative;
  top: -4px;
}

.prose .timestamp+p {
  margin-bottom: .4em;
}

.prose .timestamp {
  cursor: pointer;
  color: var(--color-primary);
}

.prose.no-max {
  max-width: 100%;
}

.prose [data-youtube-video],
.prose-sm [data-youtube-video],
.prose-xs [data-youtube-video] {
  position: relative;
  padding-bottom: 56.25%;

  iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

.prose.post-type-5 .timestamp+p:not(.timestamp),
.prose .timestamp.transcript+p:not(.timestamp) {
  margin-top: -1.75rem;
  padding-left: 55px;
}

.prose.post-type-1 p.timestamp:not(.transcript):after {
  content: "- Jump to this section in video";
  opacity: .6;
  font-weight: 300;
  margin-left: 1ch;
}

.prose p.transcript.cutoff.active,
.prose p.transcript.cutoff.active+p:not(.timestamp) {
  display: none;
}

.transcript-cutoff {
  @apply xl:pl-6;

  width: 100%;
  height: 10ch;
  display: flex;
  justify-content: center;
  align-items: flex-end;
  background-image: linear-gradient(to bottom, transparent, theme('color.base-300') 90%);
  pointer-events: none;
  position: absolute;
  bottom: 0;
  left: 0;
  transition: all 300ms ease;
}

.transcript-cutoff.active {
  background-image: none;
  bottom: -3ch;
  z-index: 10;
}

.transcript-cutoff button {
  width: 100%;
  height: 3ch;
  display: block;
  text-align: left;
  font-size: theme('fontSize.sm');
  font-weight: 500;
  text-transform: uppercase;
  pointer-events: all;
  transition: all 300ms ease;
}

.transcript-cutoff button:hover,
.transcript-cutoff button:active {
  @apply text-primary;
}

.transcript-cutoff button:before {
  content: "👇 Show Full Transcript";
}

.transcript-cutoff.active button:before {
  content: "👆 Hide Transcript";
}

.transcript-cutoff.active+.transcript-cutoff button {
  display: none;
}

.prose pre code .line.del {
  opacity: 40%;
  transition: opacity 300ms ease;
}

.prose pre code:hover .line.del {
  opacity: 100%;
}

.prose .line.del,
.prose .line.add {
  position: relative;
}

.prose .line.del:after,
.prose .line.add:after {
  content: "";
  height: 100%;
  left: -1.5rem;
  opacity: 30%;
  position: absolute;
  top: 0;
  width: calc(100% + 3rem);
}

.prose .line.del:after {
  @apply bg-error/50;
}

.prose .line.add:after {
  @apply bg-success/50;
}

.prose .line.del>span,
.prose .line.add>span {
  position: relative;
  z-index: 20;
}

.prose .line {
  display: block;
  line-height: 2;
}

.prose img {
  border-radius: theme('borderRadius.xl');
}

.prose pre,
.prose-sm pre {
  overflow-x: auto;
}

.prose pre>code {
  display: flex;
  flex-flow: column;
}

pre {
  overflow: hidden;
  position: relative;
}

code {
  counter-reset: step delStep;
  counter-increment: step 0;
  counter-increment: delStep 0;
}

.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::before,
.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *))::after {
  content: none !important;
}

.prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  @apply font-mono;
  word-wrap: break-word;
  box-decoration-break: clone;
  padding: .1rem .3rem .2rem;
  border-radius: .2rem;
}

code .line:before {
  width: 2.5rem;
  text-align: right;
  margin-right: 1rem;
  margin-left: -1.6666666em;
  padding-right: .65rem;
  display: inline-block;
  opacity: .4;
}

code .line:not(.del):before {
  content: counter(step);
  counter-increment: step delStep;
}

code .line.del:before {
  content: counter(delStep);
  counter-increment: delStep;
}

code .line:first-of-type:before {
  @apply rounded-tr-lg;
}

code .line:last-of-type:before {
  @apply rounded-br-lg;
}

pre .filepath {
  @apply bg-base-100 rounded-md h-7 text-xs leading-none;
  padding: .3rem .75rem .2rem;
  line-height: 1;
  display: flex;
  align-items: flex-end;
  gap: .5rem;
  position: absolute;
  top: .375rem;
  left: 5rem;
}

/* purgecss start ignore */
pre .filepath .lang-icon {
  width: 1em;
  height: 1em;
  position: relative;
  top: -5px;

  &.ts,
  &.tsx {
    color: theme('colors.blue.500');
  }

  &.js,
  &.jsx {
    color: theme('colors.yellow.500');
  }

  &.edge {
    color: theme('colors.indigo.500');
  }

  &.vue {
    color: theme('colors.green.500');
  }
}

.profile pre.shiki>code {
  @apply !px-0 !pb-0;
}

pre.shiki.github-dark,
.code-block pre {
  @apply !bg-base-100/50;

  &:before {
    content: "";
    margin-bottom: .75rem;
    margin-left: -1rem;
    display: block;
    height: .75rem;
    width: .75rem;
    border-radius: 9999px;
    opacity: .3;
    box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
  }

  /* [style="color: #E1E4E8"] {
    color: theme('colors.slate-base.300') !important;
  }

  [style="color: #6A737D"] {
    color: theme('colors.slate-base.500') !important;
    font-style: italic;
  } */
}

/* purgecss end ignore */

.code-copy {
  position: absolute;
  top: .375rem;
  right: .375rem;
}

pre ul.filepath-list {
  list-style: none;
  display: flex;
  margin: 0;
  padding: 0;

  li {
    padding: 0;
  }

  li:not(:first-of-type):before {
    content: "/";
    display: inline-block;
  }
}

.cdx-block.ce-code {
  position: relative;
}

.ce-code__textarea {
  min-height: 200px;
  font-family: Menlo, Monaco, Consolas, Courier New, monospace;
  color: #41314e;
  line-height: 1.6em;
  font-size: 12px;
  background: #f8f7fa;
  border: 1px solid #f1f1f4;
  box-shadow: none;
  white-space: pre;
  word-wrap: normal;
  overflow-x: auto;
  resize: vertical;
}

.ce-code__languagecode {
  @apply px-3 py-1 rounded text-xs;
  position: absolute;
  bottom: 2ch;
  right: 0;
}
